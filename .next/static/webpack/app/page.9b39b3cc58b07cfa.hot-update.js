"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/store/gameStore.ts":
/*!********************************!*\
  !*** ./src/store/gameStore.ts ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useGameStore: function() { return /* binding */ useGameStore; }\n/* harmony export */ });\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zustand */ \"(app-pages-browser)/./node_modules/zustand/esm/index.mjs\");\n/* harmony import */ var _types_game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/types/game */ \"(app-pages-browser)/./src/types/game.ts\");\n\n\n// Estado inicial del juego\nconst initialState = {\n    hunger: 100,\n    thirst: 100,\n    health: 100,\n    isInfected: false,\n    isCold: false,\n    day: 1,\n    hour: 8,\n    minute: 0,\n    isPlaying: false,\n    isPaused: false,\n    gameOver: false,\n    showItemSelection: false,\n    showManual: false,\n    showInventorySummary: false,\n    showHelp: false,\n    inventory: [],\n    zombies: [],\n    currentCards: [],\n    currentMessage: \"\",\n    showMessage: false,\n    stats: {\n        daysSurvived: 0,\n        zombiesKilled: 0,\n        itemsUsed: 0,\n        bestDay: 0,\n        totalPlayTime: 0\n    }\n};\n// Configuración del juego\nconst gameConfig = {\n    timePerHour: 5,\n    cardsPerTurn: 3,\n    cardDisplayTime: 5,\n    zombieSpawnRate: 0.2,\n    difficultyMultiplier: 1.1 // +10% dificultad por día\n};\n// Datos de las cartas\nconst cardData = {\n    [_types_game__WEBPACK_IMPORTED_MODULE_0__.CardType.FOOD]: [\n        {\n            name: \"Manzana\",\n            emoji: \"\\uD83C\\uDF4F\",\n            image: \"/images/apple.png\",\n            effect: {\n                type: \"hunger\",\n                value: 30\n            }\n        },\n        {\n            name: \"Pollo\",\n            emoji: \"\\uD83C\\uDF57\",\n            image: \"/images/chicken.png\",\n            effect: {\n                type: \"hunger\",\n                value: 50\n            }\n        },\n        {\n            name: \"Patatas\",\n            emoji: \"\\uD83C\\uDF5F\",\n            image: \"/images/chips.png\",\n            effect: {\n                type: \"hunger\",\n                value: 40\n            }\n        }\n    ],\n    [_types_game__WEBPACK_IMPORTED_MODULE_0__.CardType.DRINK]: [\n        {\n            name: \"Agua\",\n            emoji: \"\\uD83D\\uDCA7\",\n            image: \"/images/water.png\",\n            effect: {\n                type: \"thirst\",\n                value: 40\n            }\n        },\n        {\n            name: \"Zumo\",\n            emoji: \"\\uD83E\\uDD64\",\n            image: \"/images/juice.png\",\n            effect: {\n                type: \"thirst\",\n                value: 30\n            }\n        },\n        {\n            name: \"Refresco\",\n            emoji: \"\\uD83E\\uDD6B\",\n            image: \"/images/soda.png\",\n            effect: {\n                type: \"thirst\",\n                value: 35\n            }\n        }\n    ],\n    [_types_game__WEBPACK_IMPORTED_MODULE_0__.CardType.MEDICINE]: [\n        {\n            name: \"Ant\\xeddoto\",\n            emoji: \"\\uD83D\\uDC89\",\n            image: \"/images/antidote.png\",\n            effect: {\n                type: \"infection\",\n                value: 100\n            }\n        },\n        {\n            name: \"Pastilla\",\n            emoji: \"\\uD83D\\uDC8A\",\n            image: \"/images/pill.png\",\n            effect: {\n                type: \"infection\",\n                value: 100\n            }\n        }\n    ],\n    [_types_game__WEBPACK_IMPORTED_MODULE_0__.CardType.CLOTHING]: [\n        {\n            name: \"Bufanda\",\n            emoji: \"\\uD83E\\uDDE3\",\n            image: \"/images/scarf.png\",\n            effect: {\n                type: \"cold\",\n                value: 100\n            }\n        }\n    ],\n    [_types_game__WEBPACK_IMPORTED_MODULE_0__.CardType.WEAPON]: [\n        {\n            name: \"Bate\",\n            emoji: \"\\uD83C\\uDFCF\",\n            image: \"/images/bat.png\",\n            effect: {\n                type: \"zombie\",\n                value: 1\n            }\n        }\n    ],\n    [_types_game__WEBPACK_IMPORTED_MODULE_0__.CardType.JUNK]: [\n        {\n            name: \"Pato de goma\",\n            emoji: \"\\uD83E\\uDD86\",\n            image: \"/images/duck.png\",\n            effect: {\n                type: \"junk\",\n                value: 0\n            }\n        },\n        {\n            name: \"Osito\",\n            emoji: \"\\uD83E\\uDDF8\",\n            image: \"/images/plush.png\",\n            effect: {\n                type: \"junk\",\n                value: 0\n            }\n        },\n        {\n            name: \"CD\",\n            emoji: \"\\uD83D\\uDCBF\",\n            image: \"/images/cd.png\",\n            effect: {\n                type: \"junk\",\n                value: 0\n            }\n        },\n        {\n            name: \"Sombrero\",\n            emoji: \"\\uD83C\\uDFA9\",\n            image: \"/images/hat.png\",\n            effect: {\n                type: \"junk\",\n                value: 0\n            }\n        },\n        {\n            name: \"Pelota\",\n            emoji: \"⚽\",\n            image: \"/images/ball.png\",\n            effect: {\n                type: \"junk\",\n                value: 0\n            }\n        }\n    ]\n};\n// Mensajes irónicos\nconst ironicMessages = {\n    junk: [\n        \"\\xa1Cuac! Muy \\xfatil... para nada.\",\n        \"Yo no juego con esas cosas...\",\n        \"\\xbfQui\\xe9n tiene un lector de esto?\",\n        \"Al menos te ves elegante...\",\n        \"Un amigo peludo... que no te salvar\\xe1.\",\n        \"\\xbfVamos a jugar al f\\xfatbol en el apocalipsis?\"\n    ],\n    milestones: [\n        \"\\xa1Felicidades! Has sobrevivido un d\\xeda completo. \\xbfQuieres una medalla?\",\n        \"Dos d\\xedas seguidos... \\xbfEres inmortal o qu\\xe9?\",\n        \"Tres d\\xedas... Los zombis est\\xe1n empezando a respetarte.\",\n        \"Cinco d\\xedas. \\xbfEres el nuevo l\\xedder del apocalipsis?\",\n        \"Una semana completa. Los zombis est\\xe1n considerando rendirse.\",\n        \"Diez d\\xedas... \\xbfEres humano o qu\\xe9?\",\n        \"Quince d\\xedas. Los zombis ya no te ven como comida, sino como amenaza.\",\n        \"Un mes completo. \\xbfEres el nuevo rey del apocalipsis?\"\n    ],\n    actions: [\n        \"Un zombi menos. La poblaci\\xf3n mundial te lo agradece.\",\n        \"Cinco zombis eliminados. \\xbfEres el nuevo h\\xe9roe del apocalipsis?\",\n        \"Diez zombis. Los dem\\xe1s zombis est\\xe1n empezando a tener miedo.\",\n        \"Veinticinco zombis. \\xbfEres un exterminador profesional?\",\n        \"Comida + Bebida = Combo saludable. \\xa1Eres un genio!\",\n        \"Bate usado en el momento perfecto. \\xbfEres un estratega?\",\n        \"Sin comida... \\xbfPlaneas hacer dieta en el apocalipsis?\",\n        \"Sin agua... \\xbfEres un cactus?\",\n        \"El zombi te atrap\\xf3. \\xbfNo viste que se acercaba?\",\n        \"Noche sin bufanda... \\xbfEres un ping\\xfcino o qu\\xe9?\"\n    ]\n};\n// Store principal del juego\nconst useGameStore = (0,zustand__WEBPACK_IMPORTED_MODULE_1__.create)((set, get)=>({\n        ...initialState,\n        // Acciones del juego\n        startGame: ()=>{\n            set({\n                isPlaying: true,\n                gameOver: false,\n                showItemSelection: false\n            });\n            get().generateCards();\n        },\n        setShowItemSelection: (show)=>{\n            set({\n                showItemSelection: show\n            });\n        },\n        setShowManual: (show)=>{\n            set({\n                showManual: show\n            });\n        },\n        setShowInventorySummary: (show)=>{\n            set({\n                showInventorySummary: show\n            });\n        },\n        pauseGame: ()=>set({\n                isPaused: true\n            }),\n        resumeGame: ()=>set({\n                isPaused: false\n            }),\n        endGame: ()=>{\n            const state = get();\n            set({\n                isPlaying: false,\n                gameOver: true,\n                stats: {\n                    ...state.stats,\n                    bestDay: Math.max(state.stats.bestDay, state.day)\n                }\n            });\n        },\n        // Avanzar tiempo\n        advanceTime: ()=>{\n            const state = get();\n            let newHour = state.hour;\n            let newMinute = state.minute + 1;\n            let newDay = state.day;\n            if (newMinute >= 60) {\n                newMinute = 0;\n                newHour += 1;\n            }\n            if (newHour >= 24) {\n                newHour = 0;\n                newDay += 1;\n                // Mensaje de nuevo día\n                const message = ironicMessages.milestones[Math.min(newDay - 1, ironicMessages.milestones.length - 1)];\n                set({\n                    currentMessage: message,\n                    showMessage: true\n                });\n            }\n            set({\n                hour: newHour,\n                minute: newMinute,\n                day: newDay\n            });\n            // Generar cartas cada hora\n            if (newMinute === 0) {\n                get().generateCards();\n            }\n            // Spawn de zombis\n            if (Math.random() < gameConfig.zombieSpawnRate) {\n                get().spawnZombie();\n            }\n            // Mover zombis\n            get().moveZombies();\n        },\n        // Generar cartas\n        generateCards: ()=>{\n            const cards = [];\n            const cardTypes = Object.keys(cardData);\n            for(let i = 0; i < gameConfig.cardsPerTurn; i++){\n                const randomType = cardTypes[Math.floor(Math.random() * cardTypes.length)];\n                const typeData = cardData[randomType];\n                const randomCard = typeData[Math.floor(Math.random() * typeData.length)];\n                cards.push({\n                    id: \"\".concat(randomType, \"_\").concat(Date.now(), \"_\").concat(i),\n                    type: randomType,\n                    name: randomCard.name,\n                    emoji: randomCard.emoji,\n                    image: randomCard.image,\n                    description: \"Efecto: \".concat(randomCard.effect.type),\n                    effect: randomCard.effect,\n                    rarity: \"common\"\n                });\n            }\n            set({\n                currentCards: cards\n            });\n        },\n        // Seleccionar carta\n        selectCard: (cardId)=>{\n            const state = get();\n            const card = state.currentCards.find((c)=>c.id === cardId);\n            if (!card) return;\n            // Aplicar efecto de la carta\n            if (card.effect.type === \"hunger\") {\n                get().updateHunger(card.effect.value);\n            } else if (card.effect.type === \"thirst\") {\n                get().updateThirst(card.effect.value);\n            } else if (card.effect.type === \"infection\") {\n                get().setInfected(false);\n            } else if (card.effect.type === \"cold\") {\n                get().setCold(false);\n            } else if (card.effect.type === \"zombie\") {\n                get().addToInventory({\n                    id: \"bate_\".concat(Date.now()),\n                    type: _types_game__WEBPACK_IMPORTED_MODULE_0__.ItemType.WEAPON,\n                    name: \"Bate\",\n                    emoji: \"\\uD83C\\uDFCF\",\n                    image: \"/images/bat.png\",\n                    quantity: 1,\n                    description: \"Sirve para golpear zombis\"\n                });\n            } else if (card.effect.type === \"junk\") {\n                // Mensaje irónico\n                const message = ironicMessages.junk[Math.floor(Math.random() * ironicMessages.junk.length)];\n                set({\n                    currentMessage: message,\n                    showMessage: true\n                });\n            }\n            // Limpiar cartas\n            set({\n                currentCards: []\n            });\n        },\n        // Spawn de zombi\n        spawnZombie: ()=>{\n            const state = get();\n            const zombie = {\n                id: \"zombie_\".concat(Date.now()),\n                type: _types_game__WEBPACK_IMPORTED_MODULE_0__.ZombieType.NORMAL,\n                position: 5,\n                speed: 1,\n                health: 1,\n                isMoving: true\n            };\n            set({\n                zombies: [\n                    ...state.zombies,\n                    zombie\n                ]\n            });\n        },\n        // Mover zombis\n        moveZombies: ()=>{\n            const state = get();\n            const updatedZombies = state.zombies.map((zombie)=>({\n                    ...zombie,\n                    position: Math.max(0, zombie.position - zombie.speed)\n                }));\n            // Verificar si algún zombi llegó al jugador\n            const zombiesAtPlayer = updatedZombies.filter((z)=>z.position === 0);\n            if (zombiesAtPlayer.length > 0) {\n                get().setInfected(true);\n                set({\n                    currentMessage: \"El zombi te atrap\\xf3. \\xbfNo viste que se acercaba?\",\n                    showMessage: true\n                });\n            }\n            set({\n                zombies: updatedZombies\n            });\n        },\n        // Matar zombi\n        killZombie: (zombieId)=>{\n            const state = get();\n            const updatedZombies = state.zombies.filter((z)=>z.id !== zombieId);\n            const killedZombie = state.zombies.find((z)=>z.id === zombieId);\n            if (killedZombie) {\n                set({\n                    zombies: updatedZombies,\n                    stats: {\n                        ...state.stats,\n                        zombiesKilled: state.stats.zombiesKilled + 1\n                    }\n                });\n                set({\n                    currentMessage: \"Un zombi menos. La poblaci\\xf3n mundial te lo agradece.\",\n                    showMessage: true\n                });\n            }\n        },\n        // Añadir al inventario\n        addToInventory: (item)=>{\n            const state = get();\n            const existingItem = state.inventory.find((i)=>i.name === item.name);\n            if (existingItem) {\n                existingItem.quantity += item.quantity;\n            } else {\n                state.inventory.push(item);\n            }\n            set({\n                inventory: [\n                    ...state.inventory\n                ]\n            });\n        },\n        // Usar item\n        useItem: (itemId)=>{\n            const state = get();\n            const item = state.inventory.find((i)=>i.id === itemId);\n            if (!item || item.quantity <= 0) return;\n            // Aplicar efecto del item\n            if (item.type === _types_game__WEBPACK_IMPORTED_MODULE_0__.ItemType.WEAPON) {\n                // Usar bate para matar zombi\n                const zombie = state.zombies[0]; // Zombi más cercano\n                if (zombie) {\n                    get().killZombie(zombie.id);\n                }\n            }\n            // Reducir cantidad\n            item.quantity -= 1;\n            if (item.quantity <= 0) {\n                state.inventory = state.inventory.filter((i)=>i.id !== itemId);\n            }\n            set({\n                inventory: [\n                    ...state.inventory\n                ],\n                stats: {\n                    ...state.stats,\n                    itemsUsed: state.stats.itemsUsed + 1\n                }\n            });\n        },\n        // Actualizar hambre\n        updateHunger: (value)=>{\n            const state = get();\n            const newHunger = Math.max(0, Math.min(100, state.hunger + value));\n            set({\n                hunger: newHunger\n            });\n            if (newHunger < 30) {\n                set({\n                    currentMessage: \"\\xa1Tienes hambre! Busca comida antes de que sea tarde.\",\n                    showMessage: true\n                });\n            }\n        },\n        // Actualizar sed\n        updateThirst: (value)=>{\n            const state = get();\n            const newThirst = Math.max(0, Math.min(100, state.thirst + value));\n            set({\n                thirst: newThirst\n            });\n            if (newThirst < 30) {\n                set({\n                    currentMessage: \"\\xa1Tienes sed! Necesitas agua urgentemente.\",\n                    showMessage: true\n                });\n            }\n        },\n        // Actualizar salud\n        updateHealth: (value)=>{\n            const state = get();\n            const newHealth = Math.max(0, Math.min(100, state.health + value));\n            set({\n                health: newHealth\n            });\n            if (newHealth <= 0) {\n                get().endGame();\n            }\n        },\n        // Establecer infección\n        setInfected: (infected)=>{\n            set({\n                isInfected: infected\n            });\n            if (infected) {\n                set({\n                    currentMessage: \"Te sientes raro... \\xbfSer\\xe1 el apocalipsis o algo m\\xe1s?\",\n                    showMessage: true\n                });\n            }\n        },\n        // Establecer frío\n        setCold: (cold)=>{\n            set({\n                isCold: cold\n            });\n            if (cold) {\n                set({\n                    currentMessage: \"Hace fr\\xedo... \\xbfNo tienes una bufanda?\",\n                    showMessage: true\n                });\n            }\n        },\n        // Mostrar mensaje\n        showMessage: (message)=>{\n            set({\n                currentMessage: message,\n                showMessage: true\n            });\n            // Ocultar mensaje después de 3 segundos\n            setTimeout(()=>{\n                get().hideMessage();\n            }, 3000);\n        },\n        // Ocultar mensaje\n        hideMessage: ()=>{\n            set({\n                showMessage: false\n            });\n        },\n        // Reiniciar juego\n        resetGame: ()=>{\n            set(initialState);\n        }\n    }));\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/store/gameStore.ts\n"));

/***/ })

});